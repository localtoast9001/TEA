namespace RayTracer;
uses System, RayTracer;

constructor Vector3D();
begin
    _x := 0.0;
    _y := 0.0;
    _z := 0.0;
end;

constructor Vector3D(x, y, z : double);
begin
    _x := x;
    _y := y;
    _z := z;
end;

function Vector3D.GetX() : double;
begin
    GetX := _x;
end;

function Vector3D.GetY() : double;
begin
    GetY := _y;
end;

function Vector3D.GetZ() : double;
begin
    GetZ := _z;
end;

function Vector3D.GetLengthSq() : double;
begin
    GetLengthSq := Math.Sqr(_x) + Math.Sqr(_y) + Math.Sqr(_z);
end;

function Vector3D.GetLength() : double;
begin
    GetLength := Math.Sqrt(GetLengthSq());
end;

function Vector3D.DotP(a, b : ^Vector3D) : double;
begin
    DotP := 
        a^._x * b^._x + 
        a^._y * b^._y + 
        a^._z * b^._z;
end;

function Vector3D.negative(value : ^Vector3D) : Vector3D;
begin
    negative := Vector3D(
        value^._x, 
        value^._y, 
        value^._z);
end;

function Vector3D.add(a, b : ^Vector3D) : Vector3D;
begin
    add := Vector3D(
        a^._x + b^._x,
        a^._y + b^._y,
        a^._z + b^._z); 
end;    

function Vector3D.sub(a, b : ^Vector3D) : Vector3D;
begin
    sub := Vector3D(
        a^._x - b^._x,
        a^._y - b^._y,
        a^._z - b^._z);
end;
