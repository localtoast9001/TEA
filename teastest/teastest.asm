; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61030.0 

	TITLE	C:\code\TEA\teastest\teastest.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG5121	DB	'Hello World!', 00H
	ORG $+3
$SG5124	DB	'\', 00H, 't', 00H, 'm', 00H, 'p', 00H, '\', 00H, 'C', 00H
	DB	'R', 00H, 'T', 00H, '_', 00H, 'O', 00H, 'P', 00H, 'E', 00H, 'N'
	DB	00H, '.', 00H, 'B', 00H, 'M', 00H, 'P', 00H, 00H, 00H
$SG5126	DB	'Open failed on output file', 00H
	ORG $+1
$SG5128	DB	'Open succeeded on output file', 0aH, 00H
CONST	ENDS
PUBLIC	?Func1@FooBar@Samples@@QAAHXZ			; Samples::FooBar::Func1
PUBLIC	?Func2@FooBar@Samples@@QBAHXZ			; Samples::FooBar::Func2
PUBLIC	?Main@Program@Samples@@SAHHQAPAD@Z		; Samples::Program::Main
PUBLIC	?Main2@Program@Samples@@KAHHQAPAD@Z		; Samples::Program::Main2
PUBLIC	?Main3@Program@Samples@@CAHHQAPAD@Z		; Samples::Program::Main3
PUBLIC	?Main4@Program@Samples@@CAHH@Z			; Samples::Program::Main4
PUBLIC	?Main5@Program@Samples@@CAHPAVFooBar@2@@Z	; Samples::Program::Main5
PUBLIC	??1A@@UAE@XZ					; A::~A
PUBLIC	?F1@A@@UAEHXZ					; A::F1
PUBLIC	?F2@A@@UAEHXZ					; A::F2
PUBLIC	?F3@A@@UAEHXZ					; A::F3
PUBLIC	??0A@@QAE@XZ					; A::A
PUBLIC	??_GA@@UAEPAXI@Z				; A::`scalar deleting destructor'
PUBLIC	?derp@@YAHFHF_N@Z				; derp
PUBLIC	_main
PUBLIC	??_7A@@6B@					; A::`vftable'
PUBLIC	??_R4A@@6B@					; A::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVA@@@8					; A `RTTI Type Descriptor'
PUBLIC	??_R3A@@8					; A::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2A@@8					; A::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@A@@8				; A::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@4024000000000000
PUBLIC	__real@4059000000000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__close:PROC
EXTRN	?_wopen@@YAHPB_WHH@Z:PROC			; _wopen
EXTRN	_perror:PROC
EXTRN	_printf:PROC
EXTRN	_puts:PROC
EXTRN	??_EA@@UAEPAXI@Z:PROC				; A::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@A@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@A@@8 DD FLAT:??_R0?AVA@@@8		; A::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3A@@8
rdata$r	ENDS
;	COMDAT ??_R2A@@8
rdata$r	SEGMENT
??_R2A@@8 DD	FLAT:??_R1A@?0A@EA@A@@8			; A::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3A@@8
rdata$r	SEGMENT
??_R3A@@8 DD	00H					; A::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2A@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVA@@@8
_DATA	SEGMENT
??_R0?AVA@@@8 DD FLAT:??_7type_info@@6B@		; A `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVA@@', 00H
_DATA	ENDS
;	COMDAT ??_R4A@@6B@
rdata$r	SEGMENT
??_R4A@@6B@ DD	00H					; A::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVA@@@8
	DD	FLAT:??_R3A@@8
rdata$r	ENDS
;	COMDAT ??_7A@@6B@
CONST	SEGMENT
??_7A@@6B@ DD	FLAT:??_R4A@@6B@			; A::`vftable'
	DD	FLAT:??_EA@@UAEPAXI@Z
	DD	FLAT:?F1@A@@UAEHXZ
	DD	FLAT:?F2@A@@UAEHXZ
	DD	FLAT:?F3@A@@UAEHXZ
CONST	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dblB$ = -44						; size = 8
_dblA$ = -36						; size = 8
_fh2$ = -28						; size = 4
tv82 = -24						; size = 4
_pA$ = -20						; size = 4
tv72 = -16						; size = 4
$T1 = -12						; size = 4
tv65 = -8						; size = 4
_fResult$ = -3						; size = 1
_fDblResult$ = -2					; size = 1
_foo$ = -1						; size = 1
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC
; File c:\code\tea\teastest\teastest.cpp
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
; Line 65
	movsd	xmm0, QWORD PTR __real@4024000000000000
	movsd	QWORD PTR _dblA$[ebp], xmm0
; Line 66
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR _dblB$[ebp], xmm0
; Line 67
	movsd	xmm0, QWORD PTR _dblA$[ebp]
	ucomisd	xmm0, QWORD PTR _dblB$[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN5@main
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN6@main
$LN5@main:
	mov	DWORD PTR tv65[ebp], 0
$LN6@main:
	mov	al, BYTE PTR tv65[ebp]
	mov	BYTE PTR _fDblResult$[ebp], al
; Line 68
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN7@main
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0A@@QAE@XZ
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN8@main
$LN7@main:
	mov	DWORD PTR tv72[ebp], 0
$LN8@main:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR _pA$[ebp], ecx
; Line 69
	mov	edx, DWORD PTR _pA$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pA$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
; Line 70
	push	0
	push	2
	push	1
	push	0
	call	?derp@@YAHFHF_N@Z			; derp
	add	esp, 16					; 00000010H
; Line 71
	push	OFFSET $SG5121
	call	_puts
	add	esp, 4
; Line 72
	cmp	DWORD PTR _argc$[ebp], 0
	jle	SHORT $LN9@main
	mov	DWORD PTR tv82[ebp], 1
	jmp	SHORT $LN10@main
$LN9@main:
	mov	DWORD PTR tv82[ebp], 0
$LN10@main:
	mov	al, BYTE PTR tv82[ebp]
	mov	BYTE PTR _fResult$[ebp], al
; Line 75
	push	384					; 00000180H
	push	33025					; 00008101H
	push	OFFSET $SG5124
	call	?_wopen@@YAHPB_WHH@Z			; _wopen
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _fh2$[ebp], eax
; Line 76
	cmp	DWORD PTR _fh2$[ebp], -1
	jne	SHORT $LN2@main
; Line 77
	push	OFFSET $SG5126
	call	_perror
	add	esp, 4
; Line 78
	jmp	SHORT $LN1@main
$LN2@main:
; Line 80
	push	OFFSET $SG5128
	call	_printf
	add	esp, 4
; Line 81
	mov	ecx, DWORD PTR _fh2$[ebp]
	push	ecx
	call	__close
	add	esp, 4
$LN1@main:
; Line 84
	lea	edx, DWORD PTR _foo$[ebp]
	push	edx
	call	?Func1@FooBar@Samples@@QAAHXZ		; Samples::FooBar::Func1
	add	esp, 4
; Line 85
	lea	eax, DWORD PTR _foo$[ebp]
	push	eax
	call	?Func2@FooBar@Samples@@QBAHXZ		; Samples::FooBar::Func2
	add	esp, 4
; Line 86
	mov	ecx, DWORD PTR _argv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _argc$[ebp]
	push	edx
	call	?Main@Program@Samples@@SAHHQAPAD@Z	; Samples::Program::Main
	add	esp, 8
; Line 87
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_length$ = -4						; size = 4
_a$ = 8							; size = 2
_b$ = 12						; size = 4
_c$ = 16						; size = 2
_d$ = 20						; size = 1
?derp@@YAHFHF_N@Z PROC					; derp
; File c:\code\tea\teastest\teastest.cpp
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 58
	mov	DWORD PTR _length$[ebp], 0
; Line 59
	mov	eax, DWORD PTR _length$[ebp]
; Line 60
	mov	esp, ebp
	pop	ebp
	ret	0
?derp@@YAHFHF_N@Z ENDP					; derp
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GA@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GA@@UAEPAXI@Z PROC					; A::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1A@@UAE@XZ				; A::~A
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GA@@UAEPAXI@Z ENDP					; A::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0A@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0A@@QAE@XZ PROC					; A::A, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7A@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0A@@QAE@XZ ENDP					; A::A
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?F3@A@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?F3@A@@UAEHXZ PROC					; A::F3, COMDAT
; _this$ = ecx
; File c:\code\tea\teastest\teastest.cpp
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?F3@A@@UAEHXZ ENDP					; A::F3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?F2@A@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?F2@A@@UAEHXZ PROC					; A::F2, COMDAT
; _this$ = ecx
; File c:\code\tea\teastest\teastest.cpp
; Line 52
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?F2@A@@UAEHXZ ENDP					; A::F2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?F1@A@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?F1@A@@UAEHXZ PROC					; A::F1, COMDAT
; _this$ = ecx
; File c:\code\tea\teastest\teastest.cpp
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?F1@A@@UAEHXZ ENDP					; A::F1
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1A@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1A@@UAE@XZ PROC					; A::~A, COMDAT
; _this$ = ecx
; File c:\code\tea\teastest\teastest.cpp
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7A@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1A@@UAE@XZ ENDP					; A::~A
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Main5@Program@Samples@@CAHPAVFooBar@2@@Z
_TEXT	SEGMENT
_pFoo$ = 8						; size = 4
?Main5@Program@Samples@@CAHPAVFooBar@2@@Z PROC		; Samples::Program::Main5, COMDAT
; File c:\code\tea\teastest\teastest.cpp
; Line 41
	push	ebp
	mov	ebp, esp
; Line 42
	mov	eax, DWORD PTR _pFoo$[ebp]
	push	eax
	call	?Func1@FooBar@Samples@@QAAHXZ		; Samples::FooBar::Func1
	add	esp, 4
; Line 43
	pop	ebp
	ret	0
?Main5@Program@Samples@@CAHPAVFooBar@2@@Z ENDP		; Samples::Program::Main5
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Main4@Program@Samples@@CAHH@Z
_TEXT	SEGMENT
_foo$ = -1						; size = 1
_argc$ = 8						; size = 4
?Main4@Program@Samples@@CAHH@Z PROC			; Samples::Program::Main4, COMDAT
; File c:\code\tea\teastest\teastest.cpp
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 37
	lea	eax, DWORD PTR _foo$[ebp]
	push	eax
	call	?Main5@Program@Samples@@CAHPAVFooBar@2@@Z ; Samples::Program::Main5
	add	esp, 4
; Line 38
	mov	esp, ebp
	pop	ebp
	ret	0
?Main4@Program@Samples@@CAHH@Z ENDP			; Samples::Program::Main4
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Main3@Program@Samples@@CAHHQAPAD@Z
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
?Main3@Program@Samples@@CAHHQAPAD@Z PROC		; Samples::Program::Main3, COMDAT
; File c:\code\tea\teastest\teastest.cpp
; Line 30
	push	ebp
	mov	ebp, esp
; Line 31
	mov	eax, DWORD PTR _argc$[ebp]
	push	eax
	call	?Main4@Program@Samples@@CAHH@Z		; Samples::Program::Main4
	add	esp, 4
; Line 32
	pop	ebp
	ret	0
?Main3@Program@Samples@@CAHHQAPAD@Z ENDP		; Samples::Program::Main3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Main2@Program@Samples@@KAHHQAPAD@Z
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
?Main2@Program@Samples@@KAHHQAPAD@Z PROC		; Samples::Program::Main2, COMDAT
; File c:\code\tea\teastest\teastest.cpp
; Line 25
	push	ebp
	mov	ebp, esp
; Line 26
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	?Main3@Program@Samples@@CAHHQAPAD@Z	; Samples::Program::Main3
	add	esp, 8
; Line 27
	pop	ebp
	ret	0
?Main2@Program@Samples@@KAHHQAPAD@Z ENDP		; Samples::Program::Main2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Main@Program@Samples@@SAHHQAPAD@Z
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
?Main@Program@Samples@@SAHHQAPAD@Z PROC			; Samples::Program::Main, COMDAT
; File c:\code\tea\teastest\teastest.cpp
; Line 20
	push	ebp
	mov	ebp, esp
; Line 21
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	?Main2@Program@Samples@@KAHHQAPAD@Z	; Samples::Program::Main2
	add	esp, 8
; Line 22
	pop	ebp
	ret	0
?Main@Program@Samples@@SAHHQAPAD@Z ENDP			; Samples::Program::Main
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Func2@FooBar@Samples@@QBAHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Func2@FooBar@Samples@@QBAHXZ PROC			; Samples::FooBar::Func2, COMDAT
; File c:\code\tea\teastest\teastest.cpp
; Line 12
	push	ebp
	mov	ebp, esp
	mov	eax, 1
	pop	ebp
	ret	0
?Func2@FooBar@Samples@@QBAHXZ ENDP			; Samples::FooBar::Func2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Func1@FooBar@Samples@@QAAHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Func1@FooBar@Samples@@QAAHXZ PROC			; Samples::FooBar::Func1, COMDAT
; File c:\code\tea\teastest\teastest.cpp
; Line 11
	push	ebp
	mov	ebp, esp
	xor	eax, eax
	pop	ebp
	ret	0
?Func1@FooBar@Samples@@QAAHXZ ENDP			; Samples::FooBar::Func1
_TEXT	ENDS
END
