namespace TEAC;
uses System, TEAC;

constructor RelationalExpression(
    start : ^SharedOfToken; 
    left, right : ^Expression;
    operator : RelationalOperator);
inherited(start);
begin
    _left := left;
    _right := right;
    _operator := operator;
end;

destructor RelationalExpression();
begin
    if _left <> nil then
        delete _left;
    if _right <> nil then
        delete _right;
end;

procedure RelationalExpression.Accept(visitor : ^IExpressionVisitor);
begin
    visitor^.Visit(this);
end;

function RelationalExpression.GetLeft() : ^Expression;
begin
    GetLeft := _left;
end;

function RelationalExpression.GetRight() : ^Expression;
begin
    GetRight := _right;
end;

function RelationalExpression.GetOperator() : RelationalOperator;
begin
    GetOperator := _operator;
end;
