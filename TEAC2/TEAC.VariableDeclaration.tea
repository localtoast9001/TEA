namespace TEAC;
uses System, TEAC;

constructor VariableDeclaration(
    start : ^SharedOfToken);
inherited(start);
begin
    _variableType := nil;
    _initExpression := nil;
end;

destructor VariableDeclaration();
begin
    if _variableType <> nil then
        delete _variableType;
    if _initExpression <> nil then
        delete _initExpression;
end;

procedure VariableDeclaration.SetVariableType(value : ^TypeReference);
begin
    if _variableType <> nil then
        delete _variableType;
    _variableType := value;
end;

procedure VariableDeclaration.SetInitExpression(value : ^Expression);
begin
    if _initExpression <> nil then
        delete _initExpression;
    _initExpression := value;
end;

function VariableDeclaration.AddVariableName(item : ^String) : boolean;
begin
    AddVariableName := _variableNames.Add(item);
end;

function VariableDeclaration.GetVariableType() : ^TypeReference;
begin
    GetVariableType := _variableType;
end;

function VariableDeclaration.GetInitExpression() : ^Expression;
begin
    GetInitExpression := _initExpression;
end;

function VariableDeclaration.GetVariableNames() : ^LinkedListOfString;
begin
    GetVariableNames := @_variableNames;
end;
