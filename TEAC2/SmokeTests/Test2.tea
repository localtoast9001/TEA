namespace SmokeTests;

type
    Point = class
        public
            constructor();
            constructor(x, y : integer);
            destructor();
            function GetX() : integer;
            function GetY() : integer;
            procedure SetX(value : integer);
            procedure SetY(value : integer);
        var
            _x, _y : integer;
    end;
    LongPoint = class
        public
            constructor();
            constructor(x, y : long);
            destructor();
            function GetX() : long;
            function GetY() : long;
            procedure SetX(value : long);
            procedure SetY(value : long);
        var
            _x, _y : long;
    end;
    Program = static class
        public
            static function Main(
                argc : integer; 
                argv : array of array of character) : integer;
    end;

{constructor Point();
begin
    _x := 0;
    _y := 0;
end;

constructor Point(x, y : integer);
begin
    _x := x;
    _y := y;
end;

destructor Point();
begin
end;
}

function Point.GetX() : integer;
begin
    GetX := _x;
end;

function Point.GetY() : integer;
begin
    GetY := _y;
end;

procedure Point.SetX(value : integer);
begin
    _x := value;
end;

procedure Point.SetY(value : integer);
begin
    _y := value;
end;

function LongPoint.GetX() : long;
begin
    GetX := _x;
end;

function LongPoint.GetY() : long;
begin
    GetY := _y;
end;

procedure LongPoint.SetX(value : long);
begin
    _x := value;
end;

procedure LongPoint.SetY(value : long);
begin
    _y := value;
end;

function Program.Main(
    argc : integer; 
    argv : array of array of character) : boolean;
var
    pt : Point;
    lpt : LongPoint;
begin
end;
